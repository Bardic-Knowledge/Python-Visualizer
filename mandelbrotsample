import numpy as np
import matplotlib.pyplot as plt

def mandelbrot(c, max_iter):
    z = c
    for n in range(max_iter):
        if abs(z) > 2:
            return n
        z = z * z + c
    return max_iter

def generate_mandelbrot(width, height, x_min, x_max, y_min, y_max, max_iter):
    x = np.linspace(x_min, x_max, width)
    y = np.linspace(y_min, y_max, height)
    mandelbrot_set = np.zeros((width, height), dtype=int)

    for i in range(width):
        for j in range(height):
            real = x[i]
            imag = y[j]
            c = complex(real, imag)
            mandelbrot_set[i, j] = mandelbrot(c, max_iter)

    return mandelbrot_set

def plot_mandelbrot(mandelbrot_set):
    plt.imshow(mandelbrot_set.T, extent=(-2, 1, -1, 1))
    plt.xlabel("Real")
    plt.ylabel("Imaginary")
    plt.title("Mandelbrot Set")
    plt.show()

if __name__ == "__main__":
    width = 800
    height = 800
    x_min, x_max = -2, 1
    y_min, y_max = -1, 1
    max_iter = 256

    mandelbrot_set = generate_mandelbrot(width, height, x_min, x_max, y_min, y_max, max_iter)
    plot_mandelbrot(mandelbrot_set)
